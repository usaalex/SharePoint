/* SP.JS WRAPPER 1.1.1 */
/* https://github.com/usaalex/SharePoint */
/* © WM-FDH, 2016 */
var SPJS = function (e) { "use strict"; function t(e) { this.name = "ArgumentNullException", this.message = "Value can not be null or undefined. Parameter name: " + e, this.stack = (new Error).stack } function n(e, t) { this.name = "ArgumentException", this.message = (t || "Argument exception") + ". Parameter name: " + e, this.stack = (new Error).stack } function r(e) { return "undefined" == typeof e || null === e || "" === e } function o(e) { return "undefined" != typeof e && e instanceof Array ? !e.length : !0 } function i(e) { return "string" == typeof e || "number" == typeof e || "boolean" == typeof e || null === e || "undefined" == typeof e } function s(n, o, i, s) { if (r(n)) throw new t("list"); var l = e.Deferred(), a = SP.ClientContext.get_current(), u = s ? a.get_site().get_rootWeb() : a.get_web(), c = "string" == typeof n ? u.get_lists().getByTitle(n) : n, f = new SP.CamlQuery; f.set_viewXml(o || ""); var g = c.getItems(f); return i ? a.load(g, "Include(ID," + i.join(",") + ")") : a.load(g), a.executeQueryAsync(function (e, t) { l.resolve(g.$2_1, e, t) }, function (e, t) { l.reject(t, e) }), l.promise() } function l(i, s, l, a) { if (r(i)) throw new t("list"); if (r(s) || o(s)) throw new n("ids", "Value must be an array and have at least one element."); for (var u = e.Deferred(), c = SP.ClientContext.get_current(), f = a ? c.get_site().get_rootWeb() : c.get_web(), g = "string" == typeof i ? f.get_lists().getByTitle(i) : i, d = [], m = 0; m < s.length; m++) { var w = g.getItemById(s[m]); l ? c.load.apply(this, [w].concat(l)) : c.load(w), d.push(w) } return c.executeQueryAsync(function (e, t) { u.resolve(d, e, t) }, function (e, t) { u.reject(t, e) }), u.promise() } function a(i, s, l) { if (r(i)) throw new t("list"); if (r(s) || o(s)) throw new n("newItems", "Value must be an array and have at least one element."); for (var a = e.Deferred(), u = SP.ClientContext.get_current(), c = l ? u.get_site().get_rootWeb() : u.get_web(), f = "string" == typeof i ? c.get_lists().getByTitle(i) : i, g = [], d = 0; d < s.length; d++) if (s[d]) { var m = new SP.ListItemCreationInformation, w = f.addItem(m); for (var y in s[d]) if ("ID" != y) { var p = s[d][y] || null; w.set_item(y, p) } w.update(), g.push(w), u.load(w) } return u.executeQueryAsync(function (e, t) { a.resolve(g, e, t) }, function (e, t) { a.reject(t, e) }), a.promise() } function u(i, s, l) { if (r(i)) throw new t("list"); if (r(s) || o(s)) throw new n("updatedItems", "Value must be an array and have at least one element."); for (var a = e.Deferred(), u = SP.ClientContext.get_current(), c = l ? u.get_site().get_rootWeb() : u.get_web(), f = "string" == typeof i ? c.get_lists().getByTitle(i) : i, g = [], d = 0; d < s.length; d++) if (s[d] && s[d].ID && !(s[d].ID <= 0)) { var m = f.getItemById(s[d].ID); u.load(m, "ID") } return u.executeQueryAsync(function () { for (var e = 0; e < s.length; e++) if (s[e] && s[e].ID && !(s[e].ID <= 0)) { var t = f.getItemById(s[e].ID); for (var n in s[e]) if ("ID" != n) { var r = s[e][n] || null; t.set_item(n, r) } t.update(), g.push(t), u.load(t) } u.executeQueryAsync(function (e, t) { a.resolve(g, e, t) }, function (e, t) { a.reject(t, e) }) }, function (e, t) { a.reject(t) }), a.promise() } function c(e, n, o, i) { if (r(e)) throw new t("list"); if (r(n)) throw new t("camlQuery"); return s(e, n, ["ID"], i).then(function (t) { for (var n = [], r = 0; r < t.length; r++) n.push(t[r].get_item("ID")); return f(e, n, o, i) }) } function f(i, s, l, a) { if (r(i)) throw new t("list"); if (r(s) || o(s)) throw new n("ids", "Value must be an array and have at least one element."); for (var u = e.Deferred(), c = SP.ClientContext.get_current(), f = a ? c.get_site().get_rootWeb() : c.get_web(), g = "string" == typeof i ? f.get_lists().getByTitle(i) : i, d = 0; d < s.length; d++) { var m = g.getItemById(s[d]); l ? m.deleteObject() : m.recycle() } return c.executeQueryAsync(function (e, t) { u.resolve(!0, e, t) }, function (e, t) { u.reject(t, e) }), u.promise() } function g(n, o) { if (r(n)) throw new t("list"); var i = e.Deferred(), s = SP.ClientContext.get_current(), l = o ? s.get_site().get_rootWeb() : s.get_web(), a = "string" == typeof n ? l.get_lists().getByTitle(n) : n; return s.load(a), s.executeQueryAsync(function (e, t) { i.resolve(a.get_id().$5_0 || "", e, t) }, function (e, t) { i.reject(t, e) }), i.promise() } function d(n) { if (r(n)) throw new t("userName"); var o = e.Deferred(), i = SP.ClientContext.get_current(), s = i.get_web(), l = s.ensureUser(n); return i.load(l), i.executeQueryAsync(function (e, t) { o.resolve(l, e, t) }, function (e, t) { o.reject(t, e) }), o.promise() } function m(e, t) { var n = SP.ClientContext.get_current(), r = n.get_web(), o = r.get_siteUserInfoList(); return e instanceof Array || (e = [e || _spUserId]), l(o, e, t) } function w(e) { var t = document.createElement("div"); return t.innerHTML = e, t } function y(t, n, r, o) { var i = e.Deferred(), s = { title: t, allowMaximize: !1, showClose: !o, autoSize: !0, dialogReturnValueCallback: function (e, t) { i.resolve(e == SP.UI.DialogResult.OK, t) } }; return r ? s.url = r : s.html = w("<div class='dialog-wrapper' style='padding: 5px;'>{0}</div>".format(n)), SP.UI.ModalDialog.showModalDialog(s), i.promise() } function p(e, t, n) { return y(t, null, e, n) } function v(e, t) { var n = "<div class='message message-alert'>{0}</div>".format(e); return y(t || "Information", n) } function h(e, t) { var n = "<div class='message message-error' style='color: red;'>{0}</div>".format(e); return y(t || "Error", n) } function _(e, t) { var n = "<div class='message message-error'>{0}</div>                    <div class='controls' style='margin-top: 15px; text-align: right;'>                        <button onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.OK); return false;'>OK</button>                        <button onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.cancel); return false;'>Cancel</button>                    </div>".format(e); return y(t || "Confirm", n) } function I() { null != k && (k.close(), k = null), null != B && (clearTimeout(B), B = null) } function P(e, t, n, r, o) { I(), k = SP.UI.ModalDialog.showWaitScreenWithNoClose(t || "Processing", e || "Please wait...", r || 60, o || 300), +n > 0 && (B = setTimeout(I, +n)) } function D(e, t, n, r) { function o() { return new Array } function i(e, t, n) { e.push(t), e[t] = n } function s(e) { for (var t = new Array, n = 0; n < e.length; n++) t.push(e[n]); return t } null != document.getElementById("__spPickerHasReturnValue") && (document.getElementById("__spPickerHasReturnValue").value = ""), null != document.getElementById("__spPickerReturnValueHolder") && (document.getElementById("__spPickerReturnValueHolder").value = ""), commonModalDialogReturnValue.clear(); var l; if (window.showModalDialog && !browseris.safari125up) l = window.showModalDialog(e, r, t), n && invokeModalDialogCallback(n, l); else { var a = 500, u = 550, c = "yes"; if (t) { var f, g, d = o(); -1 != t.search(/^(\s*\w+\s*:\s*.+?\s*)(;\s*\s*\w+\s*:\s*.+?\s*)*(;\s*)?$/) ? (f = /^\s*(\w+)\s*:\s*(.+?)\s*$/, g = t.split(/\s*;\s*/)) : (f = /^\s*(\w+)\s*=\s*(.+?)\s*$/, g = t.split(/\s*,\s*/)); for (var m in g) { var w = f.exec(g[m]); w && 3 == w.length && i(d, w[1].toLowerCase(), w[2]) } d.width || i(d, "width", d.dialogwidth || a), d.height || i(d, "height", d.dialogheight || u), d.scrollbars || i(d, "scrollbars", d.scroll || c), t = ""; var y = s(d); for (var p in y) t && (t += ","), t += y[p] + "=" + d[y[p]] } else t = "width=" + a + ",height=" + u; var v = window.open(e, "_blank", t + ",modal=yes,dialog=yes"); v && (v.dialogArguments = r); var h = "/Picker.aspx".toUpperCase(), _ = e.toUpperCase().indexOf(h) > -1; _ || (window.onfocus = function () { var e = null != document.getElementById("__spPickerHasReturnValue") && "1" == document.getElementById("__spPickerHasReturnValue").value || commonModalDialogReturnValue.isSet(); !v || v.closed || e ? (window.onfocus = null, n && invokeModalDialogCallback(n, l)) : v.focus() }), browseris.ie || (window.fndlgClose = n) } return l } function b() { "function" == typeof commonShowModalDialog && (window.commonShowModalDialog = D) } function C(t) { var n = []; return e.each(e("div[id*='" + t + "'], " + t).find("> span.ms-entity-resolved"), function (t, r) { var o = e(r).attr("title") || null; n.push(o) }), n } function S(n, o) { if (r(n)) throw new t("key"); var i = e.Deferred(), s = SP.ClientContext.get_current(), l = o ? s.get_site().get_rootWeb() : s.get_web(), a = l.get_allProperties(); return s.load(a), s.executeQueryAsync(function (e, t) { var r = null; try { r = a.get_item(n) } catch (o) { } i.resolve(r, e, t) }, function (e, t) { i.reject(t, e) }), i.promise() } function x(n, o, s) { if (r(n)) throw new t("key"); i(o) || (o = JSON.stringify(o)), o = "undefined" == typeof o ? null : o, "boolean" == typeof o && (o = o ? 1 : 0), o = o.toString(); var l = e.Deferred(), a = SP.ClientContext.get_current(), u = s ? a.get_site().get_rootWeb() : a.get_web(), c = u.get_allProperties(); return c.set_item(n, o), u.update(), a.executeQueryAsync(function (e, t) { l.resolve(!0, e, t) }, function (e, t) { l.reject(t, e) }), l.promise() } String.prototype.format = function () { for (var e = this, t = 0; t < arguments.length; t++) e = e.replace("{" + t + "}", arguments[t]); return e }; var k = null, B = null; return { getListItems: s, getListItemsByIds: l, createListItems: a, deleteListItems: c, deleteListItemsByIds: f, updateListItems: u, ensureUser: d, getUserProfile: m, getGUID: g, showSPAlert: v, showSPConfirm: _, showSPError: h, showSPPopup: p, showSPWaitDialog: P, hideSPWaitDialog: I, applyPeoplePickerFix: b, getEntitiesPeoplePicker: C, getPropertyBag: S, setPropertyBag: x } }(jQuery);